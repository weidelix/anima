{"version":3,"file":"preload.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iEAAsD;AAEtD,wBAAa,CAAC,iBAAiB,CAAC,KAAK,EAAE;IACtC,MAAM,EAAE,UAAO,IAAa;;;;wBAChB,qBAAM,sBAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC;;oBAA/C,IAAI,GAAG,SAAwC;oBACnD,sBAAO,IAAI,EAAC;;;SACZ;IAED,UAAU,EAAE,UAAO,EAAW;;;;wBAClB,qBAAM,sBAAW,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,CAAC;;oBAAlD,IAAI,GAAG,SAA2C;oBACtD,sBAAO,IAAI,EAAC;;;SACZ;IAED,WAAW,EAAE,UAAC,GAAY;QACzB,sBAAW,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;IACvC,CAAC;CACD,CAAC,CAAC;;;;;;;;;;;AChBH;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;UCrBA;;;;UEDA;UACA;UACA;UACA","sources":["webpack://electron-test/./electron/preload.ts","webpack://electron-test/external node-commonjs \"electron\"","webpack://electron-test/webpack/bootstrap","webpack://electron-test/webpack/runtime/compat","webpack://electron-test/webpack/before-startup","webpack://electron-test/webpack/startup","webpack://electron-test/webpack/after-startup"],"sourcesContent":["import { contextBridge, ipcRenderer } from \"electron\";\r\n\r\ncontextBridge.exposeInMainWorld('api', {\r\n\tsearch: async (name : string) => {\r\n\t\tlet data = await ipcRenderer.invoke('search', name);\r\n\t\treturn data;\r\n\t},\r\n\r\n\tgetDetails: async (id : number) => {\r\n\t\tlet data = await ipcRenderer.invoke('get-details', id);\r\n\t\treturn data;\r\n\t},\r\n\r\n\topenWebsite: (url : string) => {\r\n\t\tipcRenderer.send('open-website', url);\r\n\t},\r\n});","module.exports = require(\"electron\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/native_modules/\";","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./electron/preload.ts\");\n",""],"names":[],"sourceRoot":""}